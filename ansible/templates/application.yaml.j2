# Spring Boot 애플리케이션 설정
spring:
  application:
    name: voting-system
  
  # JPA 및 Hibernate 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  
  # MySQL 데이터소스 설정
  datasource:
    url: jdbc:mysql://{{ rds_endpoint }}:3306/{{ database_name }}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: {{ db_username }}
    password: {{ db_password }}

# 서버 포트 설정
server:
  port: 8080

# 액추에이터 헬스체크 엔드포인트
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

# 로깅 설정
logging:
  level:
    org.springframework: INFO
    org.hibernate: WARN
  file:
    name: /opt/app/voting-app.log

# CORS 설정 (프론트엔드 연동용)
cors:
  allowed-origins:
    - http://localhost:3000
    - https://{{ cloudfront_domain_name | default('*.cloudfront.net') }}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"

# AWS 리소스 설정 (Terraform outputs에서 주입)
aws:
  resources:
    ec2:
      instance-ids: {{ ec2_instance_ids | default('') }}
    alb:
      dns-name: {{ alb_dns_name | default('') }}
      arn: {{ alb_arn | default('') }}
      target-group-name: {{ alb_target_group_name | default('') }}
      listener-arn: {{ alb_listener_arn | default('') }}
      availability-zones: {{ alb_availability_zones | default('[]') }}
    rds:
      endpoint: {{ rds_endpoint | default('') }}
      port: {{ rds_port | default('3306') }}
      instance-identifier: {{ rds_instance_identifier | default('') }}
      engine: {{ rds_engine | default('mysql') }}
      engine-version: {{ rds_engine_version | default('8.0') }}
      instance-class: {{ rds_instance_class | default('') }}
      availability-zone: {{ rds_availability_zone | default('') }}
      multi-az: {{ rds_multi_az | default('false') }}
    s3:
      bucket-name: {{ s3_bucket_name | default('') }}
      region: {{ s3_bucket_region | default('ap-northeast-2') }}
      website-endpoint: {{ s3_website_endpoint | default('') }}
    cloudfront:
      distribution-id: {{ cloudfront_distribution_id | default('') }}
      domain-name: {{ cloudfront_domain_name | default('') }}
      status: {{ cloudfront_status | default('') }}
    vpc:
      vpc-id: {{ vpc_id | default('') }}
      cidr-block: {{ vpc_cidr_block | default('') }}
      public-subnet-ids: {{ public_subnet_ids | default('[]') }}
      private-subnet-ids-was: {{ private_subnet_ids_was | default('[]') }}
      private-subnet-ids-db: {{ private_subnet_ids_db | default('[]') }}
      internet-gateway-id: {{ internet_gateway_id | default('') }}
      nat-gateway-ids: {{ nat_gateway_ids | default('[]') }}
    security-groups:
      alb-id: {{ security_group_alb_id | default('') }}
      was-id: {{ security_group_was_id | default('') }}
      db-id: {{ security_group_db_id | default('') }}
    ec2-details:
      public-ips: {{ ec2_public_ips | default('[]') }}
      private-ips: {{ ec2_private_ips | default('[]') }}
      availability-zones: {{ ec2_availability_zones | default('[]') }}
      instance-types: {{ ec2_instance_types | default('[]') }}
      ami-id: {{ ec2_ami_id | default('') }}

# 데모 모드 설정 (실제 AWS 리소스가 없을 때 사용)
demo:
  mode:
    enabled: true
