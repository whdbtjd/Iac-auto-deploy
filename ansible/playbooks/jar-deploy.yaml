---
- name: Deploy JAR File with Zero Downtime
  hosts: webservers

  tasks:
    - name: Backup current JAR
      copy:
        src: /opt/app/app.jar
        dest: /opt/app/app.jar.backup
        remote_src: yes
      become: yes
      failed_when: false

    - name: Copy new JAR file
      copy:
        src: "{{ jar_file | default('../files/app.jar') }}"
        dest: /opt/app/app-new.jar
        owner: ec2-user
        group: ec2-user
        mode: '0755'
      become: yes

    - name: Replace JAR atomically
      shell: |
        mv /opt/app/app-new.jar /opt/app/app.jar
      become: yes

    - name: Reload systemd and restart service
      systemd:
        name: voting-app
        state: restarted
        daemon_reload: yes
        enabled: yes
      become: yes

    - name: Wait for service to be ready
      wait_for:
        port: 8080
        host: localhost
        timeout: 60
      become: yes

    - name: Verify health
      uri:
        url: "http://localhost:8080/actuator/health"
        timeout: 10
      register: health_result
      retries: 6
      delay: 10
      until: health_result.status == 200
      become: yes

    - name: Show final status
      debug:
        msg: "Deployment completed. Health check: {{ health_result.status }}"